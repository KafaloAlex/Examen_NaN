// <auto-generated />
using System;
using Andrea.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Andrea.Migrations
{
    [DbContext(typeof(AndreaDbContext))]
    partial class AndreaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Andrea.Models.About", b =>
                {
                    b.Property<int>("Id_About")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description_About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_About")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_About");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("Andrea.Models.BlogPost", b =>
                {
                    b.Property<int>("Id_Blog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Blogger_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Blogger_Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Blogger_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Post")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_Blog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Cat")
                        .HasColumnType("int");

                    b.Property<string>("Img_Blog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_Blog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("categoryId_Cat")
                        .HasColumnType("int");

                    b.HasKey("Id_Blog");

                    b.HasIndex("categoryId_Cat");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("Andrea.Models.Category", b =>
                {
                    b.Property<int>("Id_Cat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_Cat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Cat");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Andrea.Models.Comment", b =>
                {
                    b.Property<int>("Id_Comment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Comment_DatePost")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment_Msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment_WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("blogPostId_Blog")
                        .HasColumnType("int");

                    b.HasKey("Id_Comment");

                    b.HasIndex("blogPostId_Blog");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Andrea.Models.Contact_Info", b =>
                {
                    b.Property<int>("Id_Info")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Info");

                    b.ToTable("Contact_Infos");
                });

            modelBuilder.Entity("Andrea.Models.Contact_Post", b =>
                {
                    b.Property<int>("Id_Contact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Msg_Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Contact");

                    b.ToTable("Contact_Posts");
                });

            modelBuilder.Entity("Andrea.Models.Reply", b =>
                {
                    b.Property<int>("Id_Reply")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Comment")
                        .HasColumnType("int");

                    b.Property<string>("Reply_DatePost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reply_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reply_Msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reply_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("commentId_Comment")
                        .HasColumnType("int");

                    b.HasKey("Id_Reply");

                    b.HasIndex("commentId_Comment");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("Andrea.Models.BlogPost", b =>
                {
                    b.HasOne("Andrea.Models.Category", "category")
                        .WithMany("blogPosts")
                        .HasForeignKey("categoryId_Cat");
                });

            modelBuilder.Entity("Andrea.Models.Comment", b =>
                {
                    b.HasOne("Andrea.Models.BlogPost", "blogPost")
                        .WithMany("comments")
                        .HasForeignKey("blogPostId_Blog");
                });

            modelBuilder.Entity("Andrea.Models.Reply", b =>
                {
                    b.HasOne("Andrea.Models.Comment", "comment")
                        .WithMany("replies")
                        .HasForeignKey("commentId_Comment");
                });
#pragma warning restore 612, 618
        }
    }
}
